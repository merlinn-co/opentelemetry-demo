# # Copyright The OpenTelemetry Authors
# # SPDX-License-Identifier: Apache-2.0

# # extra settings to be merged into OpenTelemetry Collector configuration
# # do not delete this file

# ## Example configuration for sending data to your own OTLP HTTP backend
# ## Note: the spanmetrics exporter must be included in the exporters array
# ## if overriding the traces pipeline.
# ##
# #  exporters:
# #    otlphttp/example:
# #      endpoint: <your-endpoint-url>
# #
# #  service:
# #    pipelines:
# #      traces:
# #        exporters: [spanmetrics, otlphttp/example]

# exporters:
#   loki:
#     endpoint: http://loki:3100/loki/api/v1/push
#   coralogix:
#     # The Coralogix traces ingress endpoint
#     traces:
#       endpoint: "ingress.${env:CORALOGIX_DOMAIN}:443"
#     metrics:
#       endpoint: "ingress.${env:CORALOGIX_DOMAIN}:443"
#     logs:
#       endpoint: "ingress.${env:CORALOGIX_DOMAIN}:443"
#     # Your Coralogix private key is sensitive
#     private_key: "${env:CORALOGIX_PRIVATE_KEY}"

#     application_name: "${env:CORALOGIX_APP_NAME}"
#     subsystem_name: "${env:CORALOGIX_SUBSYS_NAME}"

#     # (Optional) Timeout is the timeout for every attempt to send data to the backend.
#     timeout: 30s

# service:
#   pipelines:
#     traces:
#       receivers: [otlp]
#       processors: [batch]
#       exporters: [otlp, debug, spanmetrics]
#     metrics:
#       receivers:
#         [
#           docker_stats,
#           httpcheck/frontendproxy,
#           otlp,
#           prometheus,
#           redis,
#           spanmetrics,
#         ]
#       processors: [batch]
#       exporters: [otlphttp/prometheus, debug]
#     logs:
#       receivers: [otlp]
#       processors: [batch]
#       exporters: [opensearch, debug]
